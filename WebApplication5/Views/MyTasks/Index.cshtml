@using WebApplication5.Models
@model List<TaskComp>
@{
    var taskCompGroupedByProject = Model.GroupBy(x => x.ProjectNumber).OrderBy(x=>x.Key);
    ViewData["Title"] = "Текущие комплекты/работы отдела";
    string header = string.Empty;
    string action = string.Empty;
    string linkText = string.Empty;

    string showTaskCompCond = ViewData["ShowTaskCompCond"] as string;
    if (string.IsNullOrEmpty(showTaskCompCond) || showTaskCompCond == "1") { header = "Мои комплекты/работы за текущий месяц"; }
    else if (showTaskCompCond == "2") { header = "Все мои комплекты/работ"; }
    var curTaskCompId = @ViewData["TaskCompId"] as string;
    int curFilter = 100;

}

<!--<h3>@header</h3>-->
<br>
@if (ViewData["SuccessMes"] != null)
{
@Html.Partial("PartialInformation", ViewData["SuccessMes"]);
}
@if (ViewData["FailMes"] != null)
{
@Html.Partial("PartialError", ViewData["FailMes"]);
}

<input id="curFilter" type="text" hidden="hidden" value="@showTaskCompCond">
<link rel="stylesheet" href="~/css/ProjectsIndex.css">

<table id="TaskCompControl" width="100%">
    <td width="400px">
        <p><a id="filterAllTaskComp" asp-area="" asp-controller="MyTasks" asp-action="Index" asp-route-showTaskCompCond="2">Работы отдела все</a></p>
        <p><a id="filterTaskCompCurMonth" asp-area="" asp-controller="MyTasks" asp-action="Index" asp-route-showTaskCompCond="1">Работы отдела за текущий месяц</a></p>

    </td>
    <td align="left">
        <p>Всего работ <b style="color:red"> @Model.Count.ToString()</b></p>
        <p>
            Всего работ по проектам:
            @foreach (var taskCompGr in taskCompGroupedByProject)
            {
            <b onclick="SetProjNum(@taskCompGr.Key)" style="cursor: pointer;"> @taskCompGr.Key - </b>  <b style="color:red"> @taskCompGr.Count()</b>  <b> ;</b>

            }
        </p>
    </td>
</table>

<!--<table id="WorkLogs" class="QualityBook" width="100%">-->

<table id="WorkLogs" class="QualityBook">   
    <tbody id="WorkLogsTBody">
        <tr class="header">
            <th style="padding: 10px 15px; text-align: center">Наименование проекта</th>
            <th style="padding: 10px 15px; text-align: center">Наименование работы</th>
            <th style="padding: 10px 15px; text-align: center">Дата начала</th>
            <th style="padding: 10px 15px; text-align: center">Дата окончания</th>
            <th style="padding: 10px 15px; text-align: center">Исполнители</th>
            <th style="padding: 10px 15px; text-align: center">Текущий процент по комплекту</th>
            <th style="padding: 10px 15px; text-align: center;">Возможные действия</th>

        </tr>
        <tr class="filter">
            <td style="padding: 10px 15px; text-align: center">
                <input type="text" id="PrjNameSearch" oninput="FilterRows()" size="5"><br><span style="font-size:smaller;">(фильтр)</span>
            </td>
            <td style="padding: 10px 15px; text-align: center"><input type="text" id="TaskNameSearch" oninput="FilterRows()"><br><span style="font-size:smaller;">(фильтр)</span></td>

            <td style="padding: 10px 15px; text-align: center">
                <input type="date" id="StartDateSearch" oninput="FilterRows()"><br>
                <span style="font-size:smaller;">ОТ (фильтр)</span><br>
                <a class="btn btn-close" onclick="SortAscen('startDate')" id="startDateAscen"><i></i>По возрастанию</a><br>
                <a class="btn btn-dark" onclick="SortDescen('startDate')" id="startDateDescen"><i></i>По убыванию</a>
            </td>

            <td style="padding: 10px 15px; text-align: center">
                <input type="date" id="FinishDateSearch" oninput="FilterRows()"><br>
                <span style="font-size:smaller;">ДО (фильтр) </span> <br>
                <a class="btn btn-close" onclick="SortAscen('finishDate')" id="finishDateAscen"><i></i>По возрастанию</a> <br>
                <a class="btn btn-dark" onclick="SortDescen('finishDate')" id="finishDateDescen"><i></i>По убыванию</a>
            </td>
            <td style="padding: 10px 50px 10px 50px; text-align: center">
                <input type="text" id="ExecuterNameSearch" oninput="FilterRows()"><br><span style="font-size:smaller;">(фильтр)</span>
            </td>
            <td>
            </td>
            <td style="padding:10px 40px; width:200px;">
                <p><a class="btn btn-danger" id="filterTaskCompCurMonth" asp-area="" asp-controller="ImportComp" asp-action="TaskCompRequest">Сообщить<br> об отсутствии комплекта</a></p>
            </td>
        </tr>

        @foreach (var taskComp in Model)
        {
            string executersStr = string.Empty;
            var executers = taskComp.Executers;
            List<string> executersAr = new List<string>();
            if (!string.IsNullOrEmpty(executers))
            {
                executersAr.AddRange(taskComp.Executers.Split(';'));
                foreach (var executer in executersAr)
                {
                    if (executer != executersAr.Last())
                    { executersStr += $"{executer}; "; }
                    else { executersStr += $"{executer}"; }

                }
            }
                <tr class="realData" style="padding: 3px 3px; text-align: center">
                    <td class="prjName">@taskComp.ProjectNumber </td>
                    <td class="taskName">@taskComp.TaskCompName</td>
                    <td class="startDate">@taskComp.StartPlanDate?.ToShortDateString()</td>
                    <td class="finishDate">@taskComp.FinishPlanDate?.ToShortDateString()</td>
                    <td class="executers">@foreach (var exec in executersAr) {<p>@exec</p>}</td>
                    <td class="curPercent">@taskComp.CompletePercent</td>
                    <td style="padding: 5px 1px 1px 1px; text-align: center">
                        <p>
                            <input type="text" size="5" name="curPercent" id="curPercent-@taskComp.Id" value="" />
                            <input class="btn btn-default" style="color:green; " type="submit" value="%" onclick="SetPercent(@taskComp.Id)">
                            <span>&#160;&#160;</span>
                            <a class="btn btn-default" asp-controller="WorkLogs" asp-action="SelectProject" asp-route-selectedProject="@taskComp.ProjectNumber"
                               asp-route-selectedTaskList="@taskComp.TaskCompName" asp-route-DateOfReport="@DateTime.Now.ToString()"><i></i>Отчитаться</a>


                        </p>
                    </td>
                </tr>
        }
        </tbody>
</table>

<script>

    function SetPercent(taskCompId) {
        var curPercentSet = document.getElementsByName('curPercent');
        let str = ''
        for (let i = 0; i < curPercentSet.length; i++) {
            var curPer = curPercentSet[i].value
            if (curPer != '') {
                strTemp = curPercentSet[i].id
                strTemp = 'taskCompDict[' + strTemp.replace('curPercent-', '') + ']=' + curPer
                str += strTemp + '&'

            }
        }
        str = str.substring(0, str.length - 1);
        window.location.href = '/MyTasks/SetMultiplePercent/GetData?' + str;

    }

    function SetProjNum(ProjNum) {
        var prjForSearch = document.getElementById('PrjNameSearch');
        prjForSearch.value = ProjNum;
        FilterRows()
    }


    function FilterRows() {

        var taskForSearch = document.getElementById('TaskNameSearch').value;
        var prjForSearch = document.getElementById('PrjNameSearch').value;
        var startDateSearch = new Date(document.getElementById('StartDateSearch').value);
        var finishDateSearch = new Date(document.getElementById('FinishDateSearch').value);
        var executerNameSearch = document.getElementById('ExecuterNameSearch').value;
        var taskSet = document.getElementsByClassName('taskName')
        var prjSet = document.getElementsByClassName('prjName')
        var startDateSet = document.getElementsByClassName('startDate')
        var finishDateSet = document.getElementsByClassName('finishDate')
        var executerSet = document.getElementsByClassName('executers')
        for (var i = 0; i < startDateSet.length; i++) {
            startDateSet[i].parentElement.hidden = false
        }


        for (var i = 0; i < taskSet.length; i++) {
            if (!(taskSet[i].textContent.toLowerCase().includes(taskForSearch.toLowerCase()) && taskSet[i].parentElement.hidden == false)) {
                taskSet[i].parentElement.hidden = true
            }
            else {
                taskSet[i].parentElement.hidden = false
            }
        }

        for (var i = 0; i < prjSet.length; i++) {
            if (!(prjSet[i].textContent.toLowerCase().includes(prjForSearch.toLowerCase()) && prjSet[i].parentElement.hidden == false)) {
                prjSet[i].parentElement.hidden = true
            }
            else {
                prjSet[i].parentElement.hidden = false
            }
        }

        for (var i = 0; i < executerSet.length; i++) {
            if (!(executerSet[i].textContent.toLowerCase().includes(executerNameSearch.toLowerCase()) && prjSet[i].parentElement.hidden == false)) {
                executerSet[i].parentElement.hidden = true
            }
            else {
                executerSet[i].parentElement.hidden = false
            }
        }

        if (startDateSearch.getDate() > 0) {
            for (var i = 0; i < startDateSet.length; i++) {
                var daAr = startDateSet[i].textContent.replace('.', '-').replace('.', '-').split('-')
                var daStr = daAr[2] + '-' + daAr[1] + '-' + daAr[0]
                var da = new Date(daStr)
                if (startDateSearch < da && startDateSet[i].parentElement.hidden == false) {
                    // alert("true --- " + i)
                    startDateSet[i].parentElement.hidden = false
                }
                else {
                    //  alert("false --- " + i)
                    startDateSet[i].parentElement.hidden = true
                }
            }
        }

        if (finishDateSearch.getDate() > 0) {
            for (var i = 0; i < finishDateSet.length; i++) {
                var dateAr = finishDateSet[i].textContent.replace('.', '-').replace('.', '-').split('-')
                var dateStr = dateAr[2] + '-' + dateAr[1] + '-' + dateAr[0]
                var dateDa = new Date(dateStr)
                if (dateDa < finishDateSearch && finishDateSet[i].parentElement.hidden == false) {
                    finishDateSet[i].parentElement.hidden = false
                }
                else {
                    finishDateSet[i].parentElement.hidden = true
                }
            }
        }
    }

    function SortAscen(nameClass) {
        highlightSort(nameClass, 0)
        PElems = []
        dateSetSorted = []
        wl = document.getElementById('WorkLogsTBody')
        var dateSet = document.getElementsByClassName(nameClass)
        for (var i = 0; i < dateSet.length; i++) {
            dateSetSorted.push(dateSet[i])
        }
        dateSetSorted.sort(function (a, b) {
            return getDate(a) - getDate(b)
        })

        for (var i = 0; i < dateSetSorted.length; i++) {
            PElems.push(dateSetSorted[i].parentElement)
        }
        for (var i = 0; i < dateSet.length; i++) {
            dateSet[i].parentElement.remove();
        }
        for (var i = 0; i < PElems.length; i++) {
            wl.appendChild(PElems[i])
        }
    }

    function SortDescen(nameClass) {
        highlightSort(nameClass, 1)
        PElems = []
        dateSetSorted = []
        wl = document.getElementById('WorkLogsTBody')
        var dateSet = document.getElementsByClassName(nameClass)
        for (var i = 0; i < dateSet.length; i++) {
            dateSetSorted.push(dateSet[i])
        }
        dateSetSorted.sort(function (a, b) {
            return getDate(b) - getDate(a)
        })

        for (var i = 0; i < dateSetSorted.length; i++) {
            PElems.push(dateSetSorted[i].parentElement)
        }
        for (var i = 0; i < dateSet.length; i++) {
            dateSet[i].parentElement.remove();
        }
        for (var i = 0; i < PElems.length; i++) {
            wl.appendChild(PElems[i])
        }
    }

    function highlightSort(nameClass, cond) {
        startDateAscen = document.getElementById('startDateAscen')
        startDateDescen = document.getElementById('startDateDescen')
        finishDateAscen = document.getElementById('finishDateAscen')
        finishDateDescen = document.getElementById('finishDateDescen')
        if (nameClass == 'startDate' && cond == 1) {
            highlightElemFilter(startDateDescen);
            arr = [startDateAscen, finishDateAscen, finishDateDescen]
            UnhighLightElem(arr)
        }
        else if (nameClass == 'startDate' && cond == 0) {
            highlightElemFilter(startDateAscen);
            arr = [startDateDescen, finishDateAscen, finishDateDescen]
            UnhighLightElem(arr)
        }
        else if (nameClass == 'finishDate' && cond == 1) {
            highlightElemFilter(finishDateDescen);
            arr = [startDateDescen, startDateAscen, finishDateAscen]
            UnhighLightElem(arr)
        }
        else if (nameClass == 'finishDate' && cond == 0) {
            highlightElemFilter(finishDateAscen);
            arr = [startDateDescen, startDateAscen, finishDateDescen]
            UnhighLightElem(arr)
        }

    }

    function UnhighLightElem(elem) {
        for (let i = 0; i < elem.length; i++) {
            elem[i].style.fontWeight = 'normal';
            elem[i].style.color = ''
        }
    }

    function getDate(a) {
        var dateAr = a.textContent.replace('.', '-').replace('.', '-').split('-')
        var dateStr = dateAr[2] + '-' + dateAr[1] + '-' + dateAr[0]
        return new Date(dateStr)
    }

    var curFilter = document.getElementById("curFilter");
    highlightCurFilter(curFilter.value)

    function highlightCurFilter(curPage) {
        elem = '';
        switch (curPage) {
            case '1':
                elem = document.getElementById("filterTaskCompCurMonth");
                break;
            case '2':
                elem = document.getElementById("filterAllTaskComp");
                break;

        }
        if (elem != null && elem != '') highlightElemFilter(elem);
    }

    function highlightElemFilter(elem) {
        elem.style.color = 'blue';
        elem.style.fontWeight = "bold";
    }


</script>
